{% macro parse(namespace_doc, current_namespace, data) %}
    {% set default_methods = {
        '__construct': 'class.types.void'|trans({}, 'nvdoc_namespace'),
        '__clone': 'class.types.void'|trans({}, 'nvdoc_namespace'),
        '__wakeup': 'class.types.bool'|trans({}, 'nvdoc_namespace')
    } %}

    {% set method_count = 0 %}

    {% if namespace_doc.methods is not empty %}
        {% for method in namespace_doc.methods %}
            {% if method.declaringClass is defined %}
                {% if method.declaringClass.name is same as(current_namespace) %}
                    <tr>
                        {% include '@Nvdoc/_components/_table/_fields/_name.html.twig' with {
                            entity: method
                        } %}
                        {% include '@Nvdoc/_components/_table/_fields/_status.html.twig' with {
                            entity: method
                        } %}
                        <td class="px-4 py-4 text-sm whitespace-nowrap">
                            {% if method.parameters|length > 0 %}
                                <table>
                                    <tbody>
                                    {% for parameter in method.parameters %}
                                        <tr>
                                            <td>
                                                <span class="font-semibold">{{ parameter.name }}</span>:
                                            </td>
                                            <td class="pl-2">
                                                {% if parameter.type %}
                                                    {% if data[parameter.type.name] is defined %}
                                                        {% include '@Nvdoc/_components/_link.html.twig' with {
                                                            name: parameter.type,
                                                            path: path('nvdoc_read', {namespace: parameter.type.name}),
                                                            style: 'color: rgb(96 165 250);',
                                                            is_active: app.request.get('namespace') is same as(parameter.type.name),
                                                            is_block: false
                                                        } %}
                                                    {% else %}
                                                        {{ parameter.type }}
                                                    {% endif %}
                                                {% else %}
                                                    <span class="text-red-500">
                                                        {{ 'class.types.undefined'|trans({}, 'nvdoc_namespace') }}
                                                    </span>
                                                {% endif %}
                                                {% if parameter.isOptional == false %}
                                                    <span class="text-red-500 text-semibold">
                                                    {{ 'class.types.required'|trans({}, 'nvdoc_namespace') }}
                                                </span>
                                                {% endif %}
                                            </td>
                                        </tr>
                                    {% endfor %}
                                    </tbody>
                                </table>
                            {% else %}
                                <span>
                                    {{ 'class.parameters.empty'|trans({}, 'nvdoc_namespace') }}
                                </span>
                            {% endif %}
                        </td>

                        <td class="px-4 py-4 text-sm whitespace-nowrap">
                            {% if default_methods[method.name] is defined %}
                                <span>
                                    {{ default_methods[method.name] }}
                                </span>
                            {% else %}
                                {% if method.returnType %}
                                    {% if data[method.returnType.name] is defined %}
                                        {% include '@Nvdoc/_components/_link.html.twig' with {
                                            name: method.returnType,
                                            path: path('nvdoc_read', {namespace: method.returnType.name}),
                                            style: 'color: rgb(96 165 250);',
                                            is_active: app.request.get('namespace') is same as(method.returnType.name),
                                            is_block: false
                                        } %}
                                    {% else %}
                                        {{ method.returnType }}
                                    {% endif %}
                                {% else %}
                                    <span class="text-red-500">
                                    {{ 'class.types.undefined'|trans({}, 'nvdoc_namespace') }}
                                </span>
                                {% endif %}
                            {% endif %}
                        </td>
                    </tr>

                    {% set method_count = method_count + 1 %}
                {% endif %}
            {% endif %}
        {% endfor %}

        {% if method_count is same as(0) %}
            <tr>
                <td class="px-4 py-4 text-sm font-medium whitespace-nowrap">
                    {{ 'class.methods.inherited'|trans({}, 'nvdoc_namespace') }}
                </td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
        {% endif %}
    {% else %}
        <tr>
            <td class="px-4 py-4 text-sm font-medium whitespace-nowrap">
                {{ 'class.methods.empty'|trans({}, 'nvdoc_namespace') }}
            </td>
            <td></td>
            <td></td>
            <td></td>
        </tr>
    {% endif %}
{% endmacro %}
